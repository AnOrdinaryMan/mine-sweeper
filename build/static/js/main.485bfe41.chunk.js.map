{"version":3,"sources":["pages/index/index.js","App.js","index.js"],"names":["Index","restart","init","state","row","column","mineCount","table","flagCount","boomRow","boomColumn","timer","Array","this","fill","map","i","length","j","obj","Object","create","selected","hasMine","hasFlag","number","randomRow","Math","floor","random","randomColumn","m","n","setState","console","log","e","isNaN","parseInt","target","value","document","getElementsByClassName","alert","slice","String","count","temp","setTimeout","clearTimeout","button","fastForward","ifWin","mineSweeperTable","rowIndex","className","key","item","columnIndex","onMouseUp","onClick","onTouchStart","onTouchEnd","style","backgroundColor","onChange","onRowChange","defaultValue","onColumnChange","onMineCountChange","onContextMenu","preventDefault","width","height","React","Component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.485bfe41.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './index.css'\r\n\r\nclass Index extends React.Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            // 行数\r\n            row: 10,\r\n            // 列数\r\n            column: 10,\r\n            // 雷数\r\n            mineCount: 10,\r\n            // 表格\r\n            table: [[]],\r\n            // 旗子数\r\n            flagCount: 0,\r\n            // 保存爆炸的地点\r\n            boomRow: -1,\r\n            boomColumn: -1\r\n        };\r\n\r\n        // 计时器，实现移动端长按事件\r\n        this.timer = 0;\r\n    }\r\n\r\n    init () {\r\n        // 表格初始化\r\n        let table = new Array(this.state.row).fill(null);\r\n        table = table.map(() => new Array(this.state.column).fill(null));\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                let obj = Object.create(null);\r\n\r\n                obj.selected = false; // 是否已点击\r\n                obj.hasMine = false; // 是否藏有地雷\r\n                obj.hasFlag = false; // 是否标记旗子\r\n                obj.number = 0; // 九宫格内地雷的数量\r\n\r\n                table[i][j] = obj;\r\n            }\r\n        }\r\n\r\n        // 随机布雷 💣\r\n        let mineCount = this.state.mineCount;\r\n        while (mineCount) {\r\n            let randomRow = Math.floor(Math.random() * this.state.row);\r\n            let randomColumn = Math.floor(Math.random() * this.state.column);\r\n            if (table[randomRow][randomColumn].hasMine) {\r\n                continue;\r\n            }\r\n            table[randomRow][randomColumn].hasMine = true;\r\n            mineCount--;\r\n        }\r\n\r\n        // 生成九宫格内地雷的数量\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                // 若此格为地雷，跳过\r\n                if (table[i][j].hasMine) {\r\n                    continue;\r\n                }\r\n                // 遍历九宫格\r\n                for (let m = i - 1; m <= i + 1; m++) {\r\n                    for (let n = j - 1; n <= j + 1; n++) {\r\n                        // 处理边界情况\r\n                        if (m < 0 || m >= this.state.row || n < 0 || n >= this.state.column) {\r\n                            continue;\r\n                        }\r\n                        if (table[m][n].hasMine) {\r\n                            table[i][j].number += 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            table: table,\r\n            flagCount: 0,\r\n            boomRow: -1,\r\n            boomColumn: -1\r\n        }, () => { console.log(this.state.table) });\r\n    }\r\n\r\n    componentWillMount () {\r\n        this.init();\r\n    }\r\n\r\n    // 重新开始\r\n    restart = () => {\r\n        this.init();\r\n    }\r\n\r\n    // 修改行数\r\n    onRowChange (e) {\r\n        // 输入非数字\r\n        if (isNaN(parseInt(e.target.value))) {\r\n            e.target.value = '';\r\n            document.getElementsByClassName('mine-sweeper-params-item-3-input')[0].value = '1';\r\n            this.setState({\r\n                row: 1,\r\n                mineCount: 1\r\n            }, () => {\r\n                this.init();\r\n            });\r\n        } else {\r\n            if (parseInt(e.target.value) > 99) {\r\n                alert('行数不能超过99！');\r\n                e.target.value = parseInt(e.target.value.slice(0, 2));\r\n                return;\r\n            }\r\n            if (parseInt(e.target.value) === 0) {\r\n                alert('行数不能为0！');\r\n                e.target.value = '';\r\n                document.getElementsByClassName('mine-sweeper-params-item-3-input')[0].value = '1';\r\n                this.setState({\r\n                    row: 1,\r\n                    mineCount: 1\r\n                }, () => {\r\n                    this.init();\r\n                });\r\n                return;\r\n            }\r\n            // 输入非数字\r\n            if (String(parseInt(e.target.value)).length !== e.target.value.length) {\r\n                e.target.value = parseInt(e.target.value);\r\n                return;\r\n            }\r\n            document.getElementsByClassName('mine-sweeper-params-item-3-input')[0].value = '1';\r\n            this.setState({\r\n                row: parseInt(e.target.value),\r\n                mineCount: 1\r\n            }, () => {\r\n                this.init();\r\n            });\r\n        }\r\n    }\r\n\r\n    // 修改列数\r\n    onColumnChange (e) {\r\n        // 输入非数字\r\n        if (isNaN(parseInt(e.target.value))) {\r\n            e.target.value = '';\r\n            document.getElementsByClassName('mine-sweeper-params-item-3-input')[0].value = '1';\r\n            this.setState({\r\n                column: 1,\r\n                mineCount: 1\r\n            }, () => {\r\n                this.init();\r\n            });\r\n        } else {\r\n            if (parseInt(e.target.value) > 99) {\r\n                alert('列数不能超过99！');\r\n                e.target.value = parseInt(e.target.value.slice(0, 2));\r\n                return;\r\n            }\r\n            if (parseInt(e.target.value) === 0) {\r\n                alert('列数不能为0！');\r\n                e.target.value = '';\r\n                document.getElementsByClassName('mine-sweeper-params-item-3-input')[0].value = '1';\r\n                this.setState({\r\n                    row: 1,\r\n                    mineCount: 1\r\n                }, () => {\r\n                    this.init();\r\n                });\r\n                return;\r\n            }\r\n            // 输入非数字\r\n            if (String(parseInt(e.target.value)).length !== e.target.value.length) {\r\n                e.target.value = parseInt(e.target.value);\r\n                return;\r\n            }\r\n            document.getElementsByClassName('mine-sweeper-params-item-3-input')[0].value = '1';\r\n            this.setState({\r\n                column: parseInt(e.target.value),\r\n                mineCount: 1\r\n            }, () => {\r\n                this.init();\r\n            });\r\n        }\r\n    }\r\n\r\n    // 修改雷数\r\n    onMineCountChange (e) {\r\n        if (isNaN(parseInt(e.target.value))) {\r\n            e.target.value = '';\r\n            this.setState({\r\n                mineCount: 0\r\n            }, () => {\r\n                this.init();\r\n            });\r\n        } else {\r\n            if (parseInt(e.target.value) > this.state.row * this.state.column) {\r\n                alert('雷数不能超过格子的数量(' + (this.state.row * this.state.column) + ')！');\r\n                e.target.value = parseInt(e.target.value.slice(0, e.target.value.length - 1));\r\n                return;\r\n            }\r\n            // 输入非数字 || 存在前导0\r\n            if (String(parseInt(e.target.value)).length !== e.target.value.length) {\r\n                if (e.target.value[0] === '0') {\r\n                    e.target.value = parseInt(e.target.value);\r\n                } else {\r\n                    e.target.value = parseInt(e.target.value);\r\n                    return;\r\n                }\r\n            }\r\n            this.setState({\r\n                mineCount: parseInt(e.target.value)\r\n            }, () => {\r\n                this.init();\r\n            });\r\n        }\r\n    }\r\n\r\n    // 判断是否胜利\r\n    ifWin (table) {\r\n        let count = 0;\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j].selected) {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        if (count === this.state.row * this.state.column - this.state.mineCount) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // 移动端长按标记旗子\r\n    onTouchStart (row, column, e) {\r\n        console.log(row, column);\r\n        let temp = this.state.table;\r\n        this.timer = setTimeout(() => {\r\n            // 若已左击过，无法标记旗子\r\n            if (temp[row][column].selected === false) {\r\n                if (temp[row][column].hasFlag) {\r\n                    this.setState({\r\n                        flagCount: this.state.flagCount - 1\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        flagCount: this.state.flagCount + 1\r\n                    })\r\n                }\r\n                temp[row][column].hasFlag = !temp[row][column].hasFlag;\r\n            }\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    table: temp\r\n                })\r\n            }, 500);\r\n        }, 500);\r\n    }\r\n    onTouchEnd () {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    onClick (row, column, e) {\r\n        console.log(row, column);\r\n        let temp = this.state.table;\r\n\r\n        if (e.button === 2) { // 右击标记旗子\r\n            // 若已左击过，无法标记旗子\r\n            if (temp[row][column].selected === false) {\r\n                if (temp[row][column].hasFlag) {\r\n                    this.setState({\r\n                        flagCount: this.state.flagCount - 1\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        flagCount: this.state.flagCount + 1\r\n                    })\r\n                }\r\n                temp[row][column].hasFlag = !temp[row][column].hasFlag;\r\n            }\r\n        } else { // 左击\r\n            // 若已左击过，无法左击\r\n            // 若已标记旗子，无法左击\r\n            if (temp[row][column].selected === false && temp[row][column].hasFlag === false) {\r\n                // 击中地雷，游戏结束\r\n                if (temp[row][column].hasMine) {\r\n                    for (let i = 0; i < temp.length; i++) {\r\n                        for (let j = 0; j < temp[i].length; j++) {\r\n                            temp[i][j].hasFlag = false;\r\n                            temp[i][j].selected = true;\r\n                        }\r\n                    }\r\n                    // 记录爆炸的地点\r\n                    this.setState({\r\n                        boomRow: row,\r\n                        boomColumn: column\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        alert('💣💣💣 Boom ！！！');\r\n                    });\r\n                } else { // 未击中地雷\r\n                    // 击中空方块，快进，以该空方快为中心快速扫雷打开一片空区域\r\n                    if (temp[row][column].number === 0) {\r\n                        this.fastForward(row, column, temp);\r\n                    } else { // 击中数字块\r\n                        temp[row][column].selected = true;\r\n                    }\r\n                    // 胜利 \r\n                    if (this.ifWin(temp)) {\r\n                        for (let i = 0; i < temp.length; i++) {\r\n                            for (let j = 0; j < temp[i].length; j++) {\r\n                                temp[i][j].hasFlag = false;\r\n                                temp[i][j].selected = true;\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            flagCount: 0\r\n                        });\r\n                        setTimeout(() => {\r\n                            alert('🚩🚩🚩 Win ！！！');\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        this.setState({\r\n            table: temp\r\n        })\r\n    }\r\n\r\n    // 快进，若左击到一个空方块，以该空方快为中心快速扫雷打开一片空区域\r\n    fastForward (row, column, table) {\r\n        // 若为雷，结束递归\r\n        if (table[row][column].hasMine) {\r\n            return;\r\n        }\r\n        // 若已点击，结束递归\r\n        if (table[row][column].selected) {\r\n            return;\r\n        }\r\n        // 若已标记旗子，结束递归\r\n        if (table[row][column].hasFlag) {\r\n            return;\r\n        }\r\n        \r\n        table[row][column].selected = true;\r\n\r\n        // 若number > 0，结束递归\r\n        if (table[row][column].number !== 0) {\r\n            return;\r\n        }\r\n        \r\n        // 遍历九宫格\r\n        for (let m = row - 1; m <= row + 1; m++) {\r\n            for (let n = column - 1; n <= column + 1; n++) {\r\n                // 处理边界情况\r\n                if (m < 0 || m >= this.state.row || n < 0 || n >= this.state.column) {\r\n                    continue;\r\n                }\r\n                this.fastForward(m, n, table);\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let mineSweeperTable = this.state.table.map((row, rowIndex) => {\r\n            return (\r\n                <div className='mine-sweeper-row' key={'row' + rowIndex}>\r\n                    {\r\n                        row.map((item, columnIndex) => {\r\n                            return (\r\n                                <div \r\n                                    className={\r\n                                        item.selected \r\n                                        ? 'mine-sweeper-item mine-sweeper-item-selected' \r\n                                        : 'mine-sweeper-item'\r\n                                    } \r\n                                    key={'row' + rowIndex + '-column' + columnIndex}\r\n                                    onMouseUp={(e) => this.onClick(rowIndex, columnIndex, e)}\r\n                                    onTouchStart={(e) => this.onTouchStart(rowIndex, columnIndex, e)}\r\n                                    onTouchEnd={() => this.onTouchEnd()}\r\n                                    style={\r\n                                        rowIndex === this.state.boomRow && columnIndex === this.state.boomColumn\r\n                                        ? {backgroundColor: '#F56C6C'}\r\n                                        : null\r\n                                    }\r\n                                >\r\n                                    {\r\n                                        item.hasFlag ? '🚩' : null\r\n                                    }\r\n                                    {\r\n                                        item.selected\r\n                                        ?\r\n                                            item.hasMine\r\n                                            ? '💣'\r\n                                            :\r\n                                            <span className={'mine-sweeper-item-number-' + item.number}>\r\n                                                {item.number !== 0 ? item.number : null}\r\n                                            </span>\r\n                                        : null\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div className='mine-sweeper-start'>\r\n                    <span className='mine-sweeper-start-btn' onClick={this.restart}>\r\n                        重新开始\r\n                    </span>\r\n                </div>\r\n                <div className='mine-sweeper-flagCount'>\r\n                    {'🚩 X ' + this.state.flagCount}\r\n                </div>\r\n                <div className='mine-sweeper-params'>\r\n                    <span className='mine-sweeper-params-item mine-sweeper-params-item-1'>\r\n                        行数：\r\n                        <input onChange={(e) => this.onRowChange(e)} defaultValue={this.state.row} />\r\n                    </span>\r\n                    <span className='mine-sweeper-params-item mine-sweeper-params-item-2'>\r\n                        列数：\r\n                        <input onChange={(e) => this.onColumnChange(e)} defaultValue={this.state.column} />\r\n                    </span>\r\n                    <span className='mine-sweeper-params-item mine-sweeper-params-item-3'>\r\n                        雷数：\r\n                        <input \r\n                            onChange={(e) => this.onMineCountChange(e)} \r\n                            defaultValue={this.state.mineCount} \r\n                            className='mine-sweeper-params-item-3-input'\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div \r\n                    className='mine-sweeper' \r\n                    onContextMenu={(e) => {e.preventDefault()}}\r\n                    style={{width: this.state.column * 30, height: this.state.row * 30}}\r\n                >\r\n                    {mineSweeperTable}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\n\r\nimport Index from './pages/index/index'\r\n\r\nclass App extends React.Component {\r\n    render () {\r\n        return (\r\n            <Index />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}